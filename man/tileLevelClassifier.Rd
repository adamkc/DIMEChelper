% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tileLevelClassifier.R
\name{tileLevelClassifier}
\alias{tileLevelClassifier}
\title{Tile Level Classifier.}
\usage{
tileLevelClassifier(homeDir = getwd(), chipsName = "Chips", flightName,
  tileName, modelObj, exportResults = TRUE, returnPlotData = FALSE,
  filterThreshold = 0.2)
}
\arguments{
\item{homeDir}{Base Directory.  Needs "Chips" folder.}

\item{chipsName}{Folder name of the chips}

\item{flightName}{Name of flight to classify}

\item{tileName}{Name of tile to classify}

\item{modelObj}{A DIMEC model object.}

\item{exportResults}{Logical.  Option to export results for later analysis}

\item{returnPlotData}{Logical. Option to return plotData from function.}
}
\value{
Returns either a data.frame of classifications, or outputs it to a
 plotData.csv, and two kml files, or both. Outputs to "getwd()/Model Output".
  Optionally exports the results as a set of files in directories, including
  positive images, kml's of positives, and the full model results
}
\description{
The Images should be in this folder: file.path(homeDir,chipsName,flightName,tileName,Unclassified)
}
\examples{
\dontrun{

modelLabel <- "M17"
modelDir <- file.path("Model Files",
                       modelLabel,
                       paste0("ModelFile-",modelLabel,".h5"))
model <- keras::load_model_hdf5(file.path(modelDir,
                                     paste0("ModelFile-",modelLabel,".h5")))
classNames <- read.table(file.path(modelDir, "classes.txt"))[,1]


## Dos Rios Flight
setwd("F:/Adam Cummings/GoogleImagery/FirstPurchase/")
dirList <- list.dirs("Chips/ca_dosrios_20170813",recursive = FALSE,
full.names=FALSE) ##160 directories
tileLevelClassifier(flightName = "ca_dosrios_20170813",
                     tileName = "C15_R01-DosRios2016",
                      modelName=modelLabel,
                      exportResults = TRUE,
                      returnPlotData = FALSE,
                      classes=classNames)

##Use flightLevelClassifier to classify many tiles at once:

flightLevelClassifier(dirList,
       flightName = "ca_dosrios_20170813",
       modelName=modelLabel,
       exportResults = TRUE,
       returnPlotData = FALSE,
       classes=classNames)

## This also works:
sapply(dirList,tileLevelClassifier,
       flightName = "ca_dosrios_20170813",
       modelName=modelLabel,
       exportResults = TRUE,
       returnPlotData = FALSE,
       classes=classNames)
}

}
